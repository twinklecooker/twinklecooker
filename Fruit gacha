// === onepiece_adventure_bot/index.js === const { Client, GatewayIntentBits, Collection } = require('discord.js'); const fs = require('fs'); const path = require('path'); const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent] });

client.commands = new Collection(); const joueurs = new Map();

const races = ['Humain', 'Homme-Poisson', 'Géant', 'Mink', 'Skypiean', 'Lunarian'];

const iles = [ 'East Blue', 'Shells Town', 'Orange Town', 'Baratie', 'Arlong Park', 'Loguetown', 'Reverse Mountain', 'Whiskey Peak', 'Little Garden', 'Drum Island', 'Alabasta', 'Jaya', 'Skypiea', 'Water 7', 'Enies Lobby', 'Thriller Bark', 'Sabaody', 'Amazon Lily', 'Impel Down', 'Marineford', 'Punk Hazard', 'Dressrosa', 'Zou', 'Whole Cake Island', 'Wano', 'Elbaf' ];

const attaques = { "Pistolet de Luffy": { degats: 10, type: "fruit" }, "Coup de Sabre": { degats: 12, type: "epee" }, "Coup de Poing": { degats: 8, type: "melee" }, };

function getRandomEvent() { const events = ['mob', 'boss', 'rien']; return events[Math.floor(Math.random() * events.length)]; }

function applyHaki(joueur, baseDegats, isBoss) { let degats = baseDegats; if (joueur.haki.armement.actif) { degats *= (1.2 + joueur.haki.armement.niveau * 0.1); } if (isBoss && joueur.haki.rois.actif) { degats *= (2 + joueur.haki.rois.niveau * 0.2); } return Math.floor(degats); }

client.on('messageCreate', async message => { if (message.content.startsWith('!start')) { if (joueurs.has(message.author.id)) { return message.reply('Tu as déjà commencé ton aventure !'); } const race = races[Math.floor(Math.random() * races.length)]; const joueur = { nom: message.author.username, ile: 0, niveau: 1, xp: 0, vie: 100, race, haki: { armement: { actif: false, niveau: 0 }, observation: { actif: false, niveau: 0 }, rois: { actif: false, niveau: 0 } }, fruit: null, arme: null, style: 'Mêlée', combat: null }; joueurs.set(message.author.id, joueur); message.reply(Bienvenue dans l'aventure One Piece, ${joueur.nom} ! Tu es un ${joueur.race} et tu commences à ${iles[0]}); }

if (message.content === '!stats') {
    const joueur = joueurs.get(message.author.id);
    if (!joueur) return message.reply("Tu n'as pas encore commencé. Tape `!start`.");
    message.reply(`**Stats de ${joueur.nom}**\nRace: ${joueur.race}\nNiveau: ${joueur.niveau}\nXP: ${joueur.xp}\nPV: ${joueur.vie}\nÎle: ${iles[joueur.ile]}\nFruit: ${joueur.fruit || 'Aucun'}\nArme: ${joueur.arme || 'Mains'}\nStyle: ${joueur.style}`);
}

if (message.content === '!island') {
    const joueur = joueurs.get(message.author.id);
    if (!joueur) return message.reply("Tu n'as pas encore commencé. Tape `!start`.");
    message.reply(`Tu es actuellement à **${iles[joueur.ile]}**.`);
}

if (message.content === '!explore') {
    const joueur = joueurs.get(message.author.id);
    if (!joueur) return message.reply("Tu n'as pas encore commencé. Tape `!start`.");
    const event = getRandomEvent();
    joueur.combat = event;
    if (event === 'mob') {
        message.reply("Tu rencontres un pirate ! Tape `!fight` pour combattre.");
    } else if (event === 'boss') {
        message.reply("Un boss bloque le chemin ! Tape `!fight` pour l'affronter.");
    } else {
        message.reply("Tu explores mais il ne se passe rien pour l'instant...");
    }
}

if (message.content === '!fight') {
    const joueur = joueurs.get(message.author.id);
    if (!joueur || !joueur.combat) return message.reply("Pas de combat actif. Utilise `!explore` d'abord.");

    const ennemi = joueur.combat === 'boss' ? { nom: 'Boss Pirate', vie: 100, isBoss: true } : { nom: 'Pirate', vie: 50, isBoss: false };
    let log = `Combat contre ${ennemi.nom} !\n`;

    while (ennemi.vie > 0 && joueur.vie > 0) {
        const attaque = Object.values(attaques)[Math.floor(Math.random() * Object.values(attaques).length)];
        const degats = applyHaki(joueur, attaque.degats, ennemi.isBoss);
        ennemi.vie -= degats;
        log += `Tu utilises ${attaque.type} et infliges ${degats} dégâts.\n`;

        if (ennemi.vie <= 0) break;

        const attaqueMob = Math.floor(Math.random() * 10) + 5;
        joueur.vie -= attaqueMob;
        log += `${ennemi.nom} t'attaque et inflige ${attaqueMob} dégâts.\n`;

        // Gain potentiel de haki
        if (!joueur.haki.armement.actif && Math.random() < 0.01) {
            joueur.haki.armement.actif = true;
            log += "Tu éveilles le Haki de l'Armement !\n";
        }
        if (!joueur.haki.observation.actif && Math.random() < 0.005) {
            joueur.haki.observation.actif = true;
            log += "Tu éveilles le Haki de l'Observation !\n";
        }
    }

    if (ennemi.vie <= 0) {
        joueur.xp += joueur.combat === 'boss' ? 50 : 20;
        if (joueur.combat === 'boss' && !joueur.haki.rois.actif && Math.random() < 0.001) {
            joueur.haki.rois.actif = true;
            log += "Tu éveilles le Haki des Rois !\n";
        }
        if (joueur.xp >= joueur.niveau * 100) {
            joueur.niveau++;
            joueur.xp = 0;
            joueur.vie = 100;
            joueur.ile = Math.min(joueur.ile + 1, iles.length - 1);
            log += `Niveau supérieur ! Tu es maintenant niveau ${joueur.niveau} et arrives à ${iles[joueur.ile]} !\n`;
        }
        message.reply(log + "\nTu as gagné le combat !");
    } else {
        message.reply(log + "\nTu as été vaincu...");
    }
    joueur.combat = null;
}

});

client.login('TON_TOKEN_ICI');

