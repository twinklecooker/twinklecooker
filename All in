// === one_piece_bot.js ===

// Gestion des races const races = { humain: { name: "Humain", description: "Pas de bonus direct, mais XP plus rapidement.", bonus: { xpBoost: 10 } }, "homme-poisson": { name: "Homme-Poisson", description: "Bonus contre les marines et esquive améliorée sur les îles marines.", bonus: { marineDmg: 20, marineEvade: 10 } }, geant: { name: "Géant", description: "Force brute mais lent.", bonus: { meleeDmg: 30, speedPenalty: 10 } }, mink: { name: "Mink", description: "Dégâts de mêlée boostés + Mode Sulong (1x par jour)", bonus: { meleeDmg: 20, sulongAvailable: true } }, skypéien: { name: "Skypéien", description: "Esquive et attaques à distance boostées.", bonus: { evade: 15, rangedDmg: 10 } }, cyborg: { name: "Cyborg", description: "Résistance élevée + bonus aux fruits technologiques.", bonus: { defense: 15, techFruitBoost: 10 } }, longbras: { name: "Longbras", description: "Chances de coup critique augmentées.", bonus: { critRate: 10 } }, tontatta: { name: "Tontatta", description: "Difficile à toucher mais faible puissance.", bonus: { evade: 25, dmgPenalty: 10 } }, lunarian: { name: "Lunarian", description: "Maîtrise du feu et peut bloquer des coups.", bonus: { allDmg: 10, blockChance: 25 } }, oni: { name: "Oni", description: "Force et vitalité impressionnantes.", bonus: { hpBoost: 30, bossDmg: 20 } } };

// Données utilisateurs const userData = {};

// === Choix de race === function choisirRace(message, raceChoice) { raceChoice = raceChoice.toLowerCase(); if (!races[raceChoice]) { return message.reply("Race inconnue. Races disponibles : " + Object.keys(races).join(", ")); } if (userData[message.author.id]?.race) { return message.reply("Tu as déjà choisi ta race !"); } userData[message.author.id] = { race: raceChoice, sulongLastUse: null, sulongActive: false, fruits: [], haki: { armement: 0, observation: 0, rois: false }, ileActuelle: 0 }; return message.reply(Tu as choisi la race **${races[raceChoice].name}** ! ${races[raceChoice].description}); }

// === Mode Sulong === function activerSulong(message) { const user = userData[message.author.id]; if (!user || user.race !== "mink") return message.reply("Tu n'es pas un Mink !"); const now = Date.now(); const cooldown = 24 * 60 * 60 * 1000; if (user.sulongLastUse && now - user.sulongLastUse < cooldown) { const reste = Math.ceil((cooldown - (now - user.sulongLastUse)) / (60 * 1000)); return message.reply(Tu dois attendre encore ${reste} minutes avant de réutiliser Sulong.); } user.sulongLastUse = now; user.sulongActive = true; return message.reply(**${message.author.username} entre en mode Sulong !** Dégâts doublés ce combat !); }

// === Combat === function lancerCombat(playerId, ennemi) { const player = userData[playerId]; const raceData = races[player.race]; const bonus = raceData?.bonus || {}; let playerHP = 100 + (bonus.hpBoost || 0); let ennemiHP = ennemi.hp || 100; let playerDmg = 20; let ennemiDmg = ennemi.dmg || 15;

if (bonus.meleeDmg) playerDmg += playerDmg * (bonus.meleeDmg / 100); if (bonus.allDmg) playerDmg += playerDmg * (bonus.allDmg / 100); if (bonus.defense) ennemiDmg -= ennemiDmg * (bonus.defense / 100); if (player.race === "mink" && player.sulongActive) playerDmg *= 2;

const log = []; while (playerHP > 0 && ennemiHP > 0) { ennemiHP -= playerDmg; log.push(Tu infliges **${playerDmg.toFixed(1)}** dégâts à ${ennemi.nom}.); if (ennemiHP <= 0) break; const esquive = Math.random() * 100 < (bonus.evade || 0); if (esquive) log.push("Tu esquives l'attaque !"); else { playerHP -= ennemiDmg; log.push(${ennemi.nom} t'inflige **${ennemiDmg.toFixed(1)}** dégâts.); } } log.push(playerHP > 0 ? "Tu as gagné !" : "Tu as perdu..."); player.sulongActive = false; return log; }

// === Fruits du démon === const fruits = [ { nom: "Fruit de la Cire", rarete: "commun", attaques: ["Mur de cire"] }, { nom: "Fruit du Kilo", rarete: "commun", attaques: ["Écrasement"] }, { nom: "Hito Hito no Mi modèle Nika", rarete: "légendaire", attaques: ["Punch Solaire", "Bond Divin"] }, { nom: "Fruit du Dragon", rarete: "légendaire", attaques: ["Souffle Draconique"] }, { nom: "Mochi Mochi no Mi", rarete: "rare", attaques: ["Poing Mochi"] }, { nom: "Fruit de l'Invisibilité", rarete: "rare", attaques: ["Disparition"] }, { nom: "Fruit de la Glace", rarete: "rare", attaques: ["Lance de glace"] } ];

// === Gacha === function gachaFruit() { const roll = Math.random() * 100; if (roll < 5) return fruits.find(f => f.rarete === "légendaire"); if (roll < 25) return fruits.find(f => f.rarete === "rare"); return fruits.find(f => f.rarete === "commun"); }

// === Boss par île === const iles = [ { nom: "East Blue", boss: "Morgan", lvl: 1 }, { nom: "Baratie", boss: "Don Krieg", lvl: 2 }, { nom: "Arlong Park", boss: "Arlong", lvl: 3 }, { nom: "Loguetown", boss: "Smoker", lvl: 4 }, { nom: "Alabasta", boss: "Crocodile", lvl: 5 }, { nom: "Skypiea", boss: "Ener", lvl: 6 }, { nom: "Enies Lobby", boss: "Lucci", lvl: 7 }, { nom: "Thriller Bark", boss: "Moria", lvl: 8 }, { nom: "Sabaody", boss: "Kizaru", lvl: 9 }, { nom: "Marineford", boss: "Akainu", lvl: 10 }, { nom: "Wano", boss: "Kaido", lvl: 11 }, { nom: "Elbaf", boss: "Loki", lvl: 12 } ];

module.exports = { choisirRace, activerSulong, lancerCombat, gachaFruit, races, userData, fruits, iles };
